USE dbp_homework;
ALTER TABLE INVOICE_ITEM DROP FOREIGN KEY invoice_item_ibfk_1;
ALTER TABLE INVOICE DROP FOREIGN KEY invoice_ibfk_1;

DROP TABLE IF EXISTS CUSTOMER;
DROP TABLE IF EXISTS INVOICE;
DROP TABLE IF EXISTS INVOICE_ITEM;

\T C:\Users\circl\Documents\2023-2\database_programming\week1\mysql_week1.txt

CREATE TABLE CUSTOMER(
	CustomerID INT PRIMARY KEY NOT NULL,
	FirstName CHAR(25) NOT NULL,
	LastName CHAR(25) NOT NULL,
	Phone CHAR(12),
	Email VARCHAR(100)
);

INSERT INTO CUSTOMER VALUES(1, 'Nikki', 'Kaccaton','723-543-1233', 'Nikki.Kaccaton@somewhere.com');
INSERT INTO CUSTOMER VALUES(2, 'Brenda', 'Catnazaro','723-543-2344', 'Brenda.Catnazaro@somewhere.com');
INSERT INTO CUSTOMER VALUES(3, 'Bruce', 'LeCat', '723-543-3455', 'Bruce.LeCat@somewhere.com');
INSERT INTO CUSTOMER VALUES(4, 'Betsy', 'Miller', '725-654-3211', 'Betsy.Miller@somewhere.com');
INSERT INTO CUSTOMER VALUES(5, 'George', 'Miller', '725-654-4322', 'George.Miller@somewhere.com');
INSERT INTO CUSTOMER VALUES(6, 'Kathy', 'Miller', '723-514-9877', 'Kathy.Miller@somewhere.com');
INSERT INTO CUSTOMER VALUES(7, 'Betsy', 'Miller', '723-514-8766', 'Betsy.Miller@elsewhere.com');

CREATE TABLE INVOICE(
	InvoiceNumber INT PRIMARY KEY NOT NULL,
	CustomerNumber INT NOT NULL,
	DateIn Date NOT NULL,
	DateOut Date,
	TotalAmount DECIMAL(8,2),
	FOREIGN KEY (CustomerNumber)
	REFERENCES CUSTOMER(CustomerID) ON UPDATE CASCADE
);

INSERT INTO INVOICE VALUES(2015001, 1, '2004-10-15', '20061015', 158.50);
INSERT INTO INVOICE VALUES(2015002, 2, '2004-10-15', '20061015', 25.00);
INSERT INTO INVOICE VALUES(2015003, 1, '2006-10-15', '20081015', 49.00);
INSERT INTO INVOICE VALUES(2015004, 4, '2006-10-15', '20081015', 17.50);
INSERT INTO INVOICE VALUES(2015005, 6, '2007-10-15', '20111015', 12.00);
INSERT INTO INVOICE VALUES(2015006, 3, '2011-10-15', '20131015', 152.50);
INSERT INTO INVOICE VALUES(2015007, 3, '2011-10-15', '20131015', 7.00);
INSERT INTO INVOICE VALUES(2015008, 7, '2012-10-15', '20141015', 140.50);
INSERT INTO INVOICE VALUES(2015009, 5, '2012-10-15', '20141015', 27.00);

CREATE TABLE INVOICE_ITEM(
	InvoiceNumber INT NOT NULL,
	ItemNumber INT NOT NULL,
	Item CHAR(50) NOT NULL,
	Quantity INT NOT NULL,
	UnitPrice DECIMAL(8,2) NOT NULL,
	FOREIGN KEY (InvoiceNumber)
	REFERENCES INVOICE(InvoiceNumber) ON UPDATE CASCADE,
	PRIMARY KEY (InvoiceNumber, ItemNumber)
);

INSERT INTO INVOICE_ITEM VALUES(2015001, 1, 'Blouse', 2, 3.50);
INSERT INTO INVOICE_ITEM VALUES(2015001, 2, 'Dress Shirt', 5, 2.50);
INSERT INTO INVOICE_ITEM VALUES(2015001, 3, 'Formal Gown', 2, 10.00);
INSERT INTO INVOICE_ITEM VALUES(2015001, 4, 'Slacks-Mens', 10, 5.00);
INSERT INTO INVOICE_ITEM VALUES(2015001, 5, 'Slacks-Womens', 10, 6.00);
INSERT INTO INVOICE_ITEM VALUES(2015001, 6, 'Suit-Mens', 1, 9.00);
INSERT INTO INVOICE_ITEM VALUES(2015002, 1, 'Dress Shirt', 10, 2.50);
INSERT INTO INVOICE_ITEM VALUES(2015003, 1, 'Slacks-Mens', 5, 5.00);
INSERT INTO INVOICE_ITEM VALUES(2015003, 2, 'Slacks-Womens', 4, 6.00);
INSERT INTO INVOICE_ITEM VALUES(2015004, 1, 'Dress Shirt', 7, 2.50);
INSERT INTO INVOICE_ITEM VALUES(2015005, 1, 'Blouse', 2, 3.50);
INSERT INTO INVOICE_ITEM VALUES(2015005, 2, 'Dress Shirt', 2, 2.50);
INSERT INTO INVOICE_ITEM VALUES(2015006, 1, 'Blouse', 5, 3.50);
INSERT INTO INVOICE_ITEM VALUES(2015006, 2, 'Dress Shirt', 10, 2.50);
INSERT INTO INVOICE_ITEM VALUES(2015006, 3, 'Slacks-Mens', 10, 5.00);
INSERT INTO INVOICE_ITEM VALUES(2015006, 4, 'Slacks-Womens', 10, 6.00);
INSERT INTO INVOICE_ITEM VALUES(2015007, 1, 'Blouse', 2, 3.50);
INSERT INTO INVOICE_ITEM VALUES(2015008, 1, 'Blouse', 3, 3.50);
INSERT INTO INVOICE_ITEM VALUES(2015008, 2, 'Dress Shirt', 12, 2.50);
INSERT INTO INVOICE_ITEM VALUES(2015008, 3, 'Slacks-Mens', 8, 5.00);
INSERT INTO INVOICE_ITEM VALUES(2015008, 4, 'Slacks-Womens', 10, 6.00);
INSERT INTO INVOICE_ITEM VALUES(2015009, 1, 'Suit-Mens', 3, 9.00);

SHOW TABLES;
DESC CUSTOMER;
SELECT * FROM CUSTOMER;
DESC INVOICE;
SELECT * FROM INVOICE;
DESC INVOICE_ITEM;
SELECT * FROM INVOICE_ITEM;

-- Q1. 
SELECT INVOICE.DateIn, INVOICE.DateOut, CUSTOMER.Phone
FROM INVOICE
JOIN CUSTOMER ON INVOICE.CustomerNumber = CUSTOMER.CustomerID
WHERE INVOICE.TotalAmount >= 100.00;

-- Q2. 
SELECT FirstName, Phone
FROM CUSTOMER
WHERE FirstName LIKE 'B%';

-- Q3. 
SELECT MAX(TotalAmount) AS MaxTotalAmount, MIN(TotalAmount) AS MinTotalAmount, AVG(TotalAmount) AS AvgTotalAmount
FROM INVOICE;

-- Q4. 
SELECT FirstName, LastName, Phone
FROM CUSTOMER
WHERE CustomerID IN (
    SELECT INVOICE.CustomerNumber
    FROM INVOICE
    WHERE INVOICE.TotalAmount >= 100.00
)
ORDER BY CUSTOMER.LastName ASC, CUSTOMER.FirstName DESC;

-- Q5. 
SELECT CUSTOMER.FirstName, CUSTOMER.LastName, CUSTOMER.Phone
FROM CUSTOMER
JOIN INVOICE ON CUSTOMER.CustomerID = INVOICE.CustomerNumber
WHERE INVOICE.TotalAmount >= 100.00
ORDER BY CUSTOMER.LastName ASC, CUSTOMER.FirstName DESC;

-- Q6. 
SELECT CUSTOMER.FirstName, CUSTOMER.LastName, CUSTOMER.Phone
FROM CUSTOMER
JOIN INVOICE ON CUSTOMER.CustomerID = INVOICE.CustomerNumber AND INVOICE.TotalAmount >= 100.00
ORDER BY CUSTOMER.LastName ASC, CUSTOMER.FirstName DESC;

-- Q7. 
SELECT CUSTOMER.FirstName, CUSTOMER.LastName, CUSTOMER.Phone
FROM CUSTOMER
WHERE CUSTOMER.CustomerID IN (
    SELECT INVOICE.CustomerNumber
    FROM INVOICE_ITEM
    JOIN INVOICE ON INVOICE_ITEM.InvoiceNumber = INVOICE.InvoiceNumber
    WHERE INVOICE_ITEM.Item = 'Dress Shirt'
)
ORDER BY CUSTOMER.LastName ASC, CUSTOMER.FirstName DESC;

-- Q8. 
SELECT CUSTOMER.FirstName, CUSTOMER.LastName, CUSTOMER.Phone
FROM CUSTOMER
JOIN INVOICE ON CUSTOMER.CustomerID = INVOICE.CustomerNumber
JOIN INVOICE_ITEM ON INVOICE.InvoiceNumber = INVOICE_ITEM.InvoiceNumber
WHERE INVOICE_ITEM.Item = 'Dress Shirt'
ORDER BY CUSTOMER.LastName ASC, CUSTOMER.FirstName DESC;

-- Q9. 
SELECT CUSTOMER.FirstName, CUSTOMER.LastName, CUSTOMER.Phone
FROM CUSTOMER
JOIN INVOICE ON CUSTOMER.CustomerID = INVOICE.CustomerNumber
JOIN INVOICE_ITEM ON INVOICE.InvoiceNumber = INVOICE_ITEM.InvoiceNumber AND INVOICE_ITEM.Item = 'Dress Shirt'
ORDER BY CUSTOMER.LastName ASC, CUSTOMER.FirstName DESC;

-- Q10. 
SELECT CUSTOMER.FirstName, CUSTOMER.LastName, CUSTOMER.Phone
FROM CUSTOMER
JOIN (
    SELECT INVOICE.CustomerNumber
    FROM INVOICE_ITEM
    JOIN INVOICE ON INVOICE_ITEM.InvoiceNumber = INVOICE.InvoiceNumber
    WHERE INVOICE_ITEM.Item = 'Dress Shirt'
) AS subquery ON CUSTOMER.CustomerID = subquery.CustomerNumber
ORDER BY CUSTOMER.LastName ASC, CUSTOMER.FirstName DESC;

-- Q11. 
SELECT CUSTOMER.FirstName, CUSTOMER.LastName, CUSTOMER.Phone, SUM(INVOICE.TotalAmount) AS TotalAmount
FROM CUSTOMER
JOIN INVOICE ON CUSTOMER.CustomerID = INVOICE.CustomerNumber
JOIN INVOICE_ITEM ON INVOICE.InvoiceNumber = INVOICE_ITEM.InvoiceNumber
WHERE INVOICE_ITEM.Item = 'Dress Shirt'
GROUP BY CUSTOMER.CustomerID
ORDER BY TotalAmount ASC, CUSTOMER.LastName ASC, CUSTOMER.FirstName DESC;

\t;